{% extends "index.html.twig" %}

{% block title %}Ajout d'un projet{% endblock %}

{% block section %}

    <h1>{% if projet %} {{ projet.nomProjet}} {% else %} Ajout d'un projet {% endif %}</h1>
    <form action="" method="POST" class="mt-4">
        {% if projet %}
            <input type="hidden" name="idProjet" value="{{ projet.idProjet }}">
        {% endif %}
        <div class="mb-3">
            <label for="titre" class="form-label">Titre du projet</label>
            <input type="text" name="titre" id="titre" class="form-control" required {% if projet %}value="{{ projet.nomProjet }}" {% endif%} >
        </div>
        <div class="mb-3">
            <label for="description" class="form-label">Description du projet</label>
            <textarea name="description" id="description" class="form-control" rows="5" required  >{% if projet %}{{ projet.description }} {% endif%}</textarea>
        </div>
        <div class="mb-3">
            <label for="sourceUrlInput" class="form-label">Url de vos sources:</label>
            <div class="d-flex">
                <input type="text" class="form-control" id="sourceUrlInput">
                <button class="btn btn-primary" type="button" onclick="addUrl('sourceUrlInput','sourceUrlList','sourceHiddenUrls' )">Add URL</button>
            </div>
            <ul id="sourceUrlList">
                {% if projet %}
                    {% for url in projet.urlsSources %}
                        <li>{{ url.url }} <button type="button" onclick="deleteUrl(this.parentNode)">Delete</button></li>
                    {% endfor %}
                {% endif %}
            </ul>
            <!--Create a hidden input to store the urls-->
            <input type="hidden" name="sourcesUrls" id="sourceHiddenUrls">
        </div>
        <!--demoUrls-->
        <div class="mb-3">
            <label for="demoUrlInput" class="form-label">Urls de vos demos:</label>
            <div class="d-flex">
                <input type="text" class="form-control" id="demoUrlInput">
                <button class="btn btn-primary" type="button" onclick="addUrl('demoUrlInput','demoUrlList','demoHiddenUrls' )">Add URL</button>
            </div>
            <ul id="demoUrlList">
                {% if projet %}
                    {% for url in projet.urlsDemos %}
                        <li>{{ url.url }} <button type="button" onclick="deleteUrl(this.parentNode)">Delete</button></li>
                    {% endfor %}
                {% endif %}
            </ul>
            <!--Create a hidden input to store the urls-->
            <input type="hidden" name="demosUrls" id="demoHiddenUrls">
        </div>
        <!--imgsUrls-->
        <div class="mb-3">
            <label for="imgUrlInput" class="form-label">Urls de vos images:</label>
            <div class="d-flex">
                <input type="text" class="form-control" id="imgUrlInput">
                <button class="btn btn-primary" type="button" onclick="addUrl('imgUrlInput','imgUrlList','imgHiddenUrls' )">Add URL</button>
            </div>
            <ul id="imgUrlList">
                {% if projet %}
                    {% for url in projet.imgsUrls %}
                        <li>{{ url.url }} <button type="button" onclick="deleteUrl(this.parentNode)">Delete</button></li>
                    {% endfor %}
                {% endif %}
            </ul>
            <!--Create a hidden input to store the urls-->
            <input type="hidden" name="imgsUrls" id="imgHiddenUrls">
        </div>
        <div class="mb-3">
            <label for="context" class="form-label">Context</label>
            <!--SELECT THE CONTEXT-->
            <select name="idContexte" id="context" class="form-select" required>
                <option value="0">Choisir un context</option>
                {% for context in contexts %}
                    <option {% if projet %} {% if projet.idContexte == context.idContexte %}selected{% endif %}{% endif %} value="{{ context.idContexte }}">{{ context.identifiant }} - {{ context.intitule }} - {{ context.semestre }}</option>
                {% endfor %}
            </select>
        </div>
        <!--SELECT THE CATEGORIE-->
        <div class="mb-3">
            <label for="categorie" class="form-label">Categorie</label>
            <select name="idCategorie" id="categorie" class="form-select" required>
                <option value="0">Choisir une categorie</option>
                {% for categorie in categories %}
                    <option  {% if projet %}{% if projet.idCategorie == categorie.idCategorie%}selected{% endif %}{% endif %}  value="{{ categorie.idCategorie }}">{{ categorie.intitule }}</option>
                {% endfor %}
            </select>

        </div>
        <div>
            <label for="tags" class="form-label">Tags</label>
            <input type="text" name="tags" id="tags" class="form-control" required {% if projet %}value="{{ projet.tagsstr }}" {% endif%} placeholder="tag1,tag2,tag3" >
        </div>
        <!--SELECT THE Participants-->
        <div class="mb-3">
            <label for="participants" class="form-label">Participants</label>
            <input type="text" id="search" class="form-control" >
            <!--list of the participants as checkbox-->
            <ul id="participants">
                {% if projet %}
                    {% for participant in projet.participants %}
                        <li id="{{ participant.idMembre }}">
                            <input type="checkbox" name="participants[]"  value="{{ participant.idMembre }}" onclick="console.log(this.checked);" checked>
                            {{ participant.nom }} {{ participant.prenom }}
                        </li>
                    {% endfor %}
                {% endif %}
            </ul>
        </div>
        <button type="submit" class="btn btn-primary" name="{% if projet %}valider_mod_projet{% else %}valider_ajout_projet{% endif %}" value="true">
            {% if projet %}Modifier{% else %}Ajouter{% endif %}
        </button>
    </form>

    <script>
        // Search the user from the input
        function searchUser(value){
            url = "https://webmmi.iut-tlse3.fr/~glk4599a/siteListeProjet/index.php?action=searchUser&search="
            var participants = document.getElementById("participants");
            url += value;
            fetch(url)
                .then(response => response.json())
                .then(data => {
                    for (let elem of participants.children) {
                        if (!elem.children[0].checked){
                            elem.remove();
                        }
                    }
                    data.forEach(user => {
                        if (document.getElementById(user.idMembre)) return
                        elem = `
                            <li id=${user.idMembre}>
                                <input type="checkbox" name="participants[]"  value="${user.idMembre}" onclick="console.log(this.checked);">
                                ${user.nom} ${user.prenom}
                            </li>
                        `;
                        participants.insertAdjacentHTML('beforeend', elem);
                    });
                });

        }

        // Add an event listener to the input
        document.getElementById("search").addEventListener("input", function(){
            if (this.value.length < 3) return
            searchUser(this.value);
        });
    </script>

    <script>

        function addUrl(urlInputID, urlListID, hiddenUrlsID) {

            var urlInput = document.getElementById(urlInputID);
            var url = urlInput.value.trim();
            var urlList = document.getElementById(urlListID);
            var hiddenUrls = document.getElementById(hiddenUrlsID);


            if (url !== '') {
                var listItem = document.createElement('li');
                listItem.appendChild(document.createTextNode(url));
                var deleteButton = document.createElement('button');
                deleteButton.appendChild(document.createTextNode('Delete'));
                deleteButton.setAttribute('type', 'button');
                deleteButton.setAttribute('onclick', 'deleteUrl(this.parentNode)');
                listItem.appendChild(deleteButton);
                urlList.appendChild(listItem);
                urlList.value = '';
            }
            updateHiddenUrls(urlList,hiddenUrls);
        }
        function updateHiddenUrls(urlList,hiddenUrls) {
            console.log(urlList.children.length)
            console.log("hiddenUrls")
            var hiddenUrlst = [];
            for (var i = 0; i < urlList.children.length; i++) {
                hiddenUrlst.push(urlList.children[i].firstChild.nodeValue);
            }

            hiddenUrls.value =  JSON.stringify(hiddenUrlst);
        }
        {% if projet %}
        updateHiddenUrls(document.getElementById("sourceUrlList"),document.getElementById("sourceHiddenUrls"));
        updateHiddenUrls(document.getElementById("demoUrlList"),document.getElementById("demoHiddenUrls"));
        updateHiddenUrls(document.getElementById("imgUrlList"),document.getElementById("imgHiddenUrls"));
        {% endif %}
        function deleteUrl(item){
            const urlListID = item.parentNode.id;
            const hiddenUrlsID = item.parentNode.nextElementSibling.id;
            item.parentNode.removeChild(item);

            var urlList = document.getElementById(urlListID);
            var hiddenUrls = document.getElementById(hiddenUrlsID);
            console.log(urlList)
            console.log(hiddenUrls)
            updateHiddenUrls(urlList,hiddenUrls);
        }
    </script>
{% endblock %}
